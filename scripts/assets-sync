#!/bin/bash

set -e  # Exit immediately if a command exits with a non-zero status
set -u  # Treat unset variables as an error
set -o pipefail  # Catch errors in pipelines

# Function for error handling
die () {
    echo "Error: $1" >&2
    exit 1
}

# Function for script usage
usage () {
    echo "Usage: $0 --srcstaccount <src_st_account> --srcstkey <src_st_key> --srcstcontainer <src_st_container> --dststaccount <dst_st_account> --dststkey <dst_st_key> --dststcontainer <dst_st_container> [--tmpdir <temp_directory>]"
    exit 1
}

# Use a secure temporary directory
TMPDIR=$(mktemp -d) || die "Failed to create a temporary directory."

# Parse command-line arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        --srcstaccount) SRC_ST_ACCOUNT="$2"; shift 2;;
        --srcstkey) SRC_ST_KEY="$2"; shift 2;;
        --srcstcontainer) SRC_ST_FILESYSTEM="$2"; shift 2;;
        --dststaccount) DST_ST_ACCOUNT="$2"; shift 2;;
        --dststkey) DST_ST_KEY="$2"; shift 2;;
        --dststcontainer) DST_ST_FILESYSTEM="$2"; shift 2;;
        --tmpdir) TMPDIR="$2"; shift 2;;
        --help) usage;;
        *) die "Unknown option: $1";;
    esac
done

# Validate required parameters
if [[ -z "${SRC_ST_ACCOUNT:-}" || -z "${SRC_ST_KEY:-}" || -z "${SRC_ST_FILESYSTEM:-}" || -z "${DST_ST_ACCOUNT:-}" || -z "${DST_ST_KEY:-}" || -z "${DST_ST_FILESYSTEM:-}" ]]; then
    die "Missing required parameters."
fi

# Set Azure storage environment variables (avoid exposing credentials in CLI)
export AZURE_STORAGE_ACCOUNT="$SRC_ST_ACCOUNT"
export AZURE_STORAGE_KEY="$SRC_ST_KEY"

echo "===> Checking if source storage container exists..."
if ! az storage container exists --name "$SRC_ST_FILESYSTEM" --account-name "$SRC_ST_ACCOUNT" --account-key "$SRC_ST_KEY" --query "exists" --output tsv | grep -q "true"; then
    die "Source container '$SRC_ST_FILESYSTEM' does not exist."
fi

echo "===> Downloading files from source storage..."
if ! azcopy copy "https://$SRC_ST_ACCOUNT.blob.core.windows.net/$SRC_ST_FILESYSTEM/*" "$TMPDIR/" --recursive; then
    die "Failed to download files from source container."
fi

# Set destination storage credentials
export AZURE_STORAGE_ACCOUNT="$DST_ST_ACCOUNT"
export AZURE_STORAGE_KEY="$DST_ST_KEY"

echo "===> Uploading files to destination storage..."
if ! azcopy copy "$TMPDIR/*" "https://$DST_ST_ACCOUNT.blob.core.windows.net/$DST_ST_FILESYSTEM/" --recursive; then
    die "Failed to upload files to destination container."
fi

# Cleanup temporary files
echo "===> Cleaning up temporary files..."
rm -rf "$TMPDIR"

echo "===> File transfer completed successfully."
