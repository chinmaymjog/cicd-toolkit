#!/bin/bash

set -e  # Exit immediately if a command exits with a non-zero status
set -u  # Treat unset variables as an error
set -o pipefail  # Catch errors in pipelines

# Function for error handling
die () {
    echo "Error: $1" >&2
    exit 1
}

# Function for script usage
usage () {
    echo "Usage: $0 --srcstaccount <src_st_account> --srcstkey <src_st_key> --srcstfileshare <src_st_fileshare> --srcpath <src_path> --dststaccount <dst_st_account> --dststkey <dst_st_key> --dststfileshare <dst_st_fileshare> --dstpath <dst_path>"
    exit 1
}

# Use a secure temporary directory
TMPDIR=$(mktemp -d) || die "Failed to create a temporary directory."

# Parse command-line arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        --srcstaccount) SRC_ST_ACCOUNT="$2"; shift 2;;
        --srcstkey) SRC_ST_KEY="$2"; shift 2;;
        --srcstfileshare) SRC_ST_FILESHARE="$2"; shift 2;;
        --srcpath) SRC_DIR="$2"; shift 2;;
        --dststaccount) DST_ST_ACCOUNT="$2"; shift 2;;
        --dststkey) DST_ST_KEY="$2"; shift 2;;
        --dststfileshare) DST_ST_FILESHARE="$2"; shift 2;;
        --dstpath) DST_DIR="$2"; shift 2;;
        --help) usage;;
        *) die "Unknown option: $1";;
    esac
done

# Validate required parameters
if [[ -z "${SRC_ST_ACCOUNT:-}" || -z "${SRC_ST_KEY:-}" || -z "${SRC_ST_FILESHARE:-}" || -z "${SRC_DIR:-}" || -z "${DST_ST_ACCOUNT:-}" || -z "${DST_ST_KEY:-}" || -z "${DST_ST_FILESHARE:-}" || -z "${DST_DIR:-}" ]]; then
    die "Missing required parameters."
fi

# Set destination storage credentials
export AZURE_STORAGE_ACCOUNT="$SRC_ST_ACCOUNT"
export AZURE_STORAGE_KEY="$SRC_ST_KEY"

# Check if Directory exists
echo "===> Checking if Directory '$SRC_DIR' exists on '$SRC_ST_ACCOUNT' at '$SRC_ST_FILESHARE'"
if az storage directory exists --share-name "$SRC_ST_FILESHARE" --name "$SRC_DIR" -o tsv | grep -q "True"; then
    echo "===> Directory '$SRC_DIR' exists."
else
    die "Directory '$SRC_DIR' does not exists."
fi  

echo "===> Downloading files from source storage."
if ! az storage file download-batch --destination "$TMPDIR" --source "$SRC_ST_FILESHARE/$SRC_DIR"; then
    die "Failed to download files from source fileshare."
fi

# Set destination storage credentials
export AZURE_STORAGE_ACCOUNT="$DST_ST_ACCOUNT"
export AZURE_STORAGE_KEY="$DST_ST_KEY"

echo "===> Checking if Directory '$DST_DIR' exists on '$DST_ST_ACCOUNT' at '$DST_ST_FILESHARE'"
if az storage directory exists --share-name "$DST_ST_ACCOUNT" --name "$DST_DIR" -o tsv | grep -q "True"; then
    echo "===> Directory '$DST_DIR' exists."
else
    die "Directory '$DST_DIR' does not exists."
fi  

echo "===> Uploading files to destination storage."
if ! az storage file upload-batch --destination "$DST_ST_FILESHARE/$DST_DIR" --source "$TMPDIR"; then
    die "Failed to upload files to destination fileshare."
fi

# Cleanup temporary files
echo "===> Cleaning up temporary files."
rm -rf "$TMPDIR"

echo "===> File transfer completed successfully."