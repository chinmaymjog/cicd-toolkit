#!/bin/bash

set -e  # Exit immediately if a command exits with a non-zero status
set -u  # Treat unset variables as an error
set -o pipefail  # Catch errors in pipelines

# Function for error handling
die () {
    echo "Error: $1" >&2
    exit 1
}

# Usage function
usage () {
    echo "Usage: $0 --staccount <st_account> --stkey <st_key> --stfilesystem <st_filesystem> --dir <dir> --file <file>"
    exit 1
}

# Parse arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        --staccount) ST_ACCOUNT="$2"; shift 2;;
        --stkey) ST_KEY="$2"; shift 2;;
        --stfilesystem) ST_FILESYSTEM="$2"; shift 2;;
        --dir) DIR="$2"; shift 2;;
        --file) FILE="$2"; shift 2;;
        --help) usage;;
        *) die "Unknown option: $1";;
    esac
done

# Validate required parameters
if [[ -z "${ST_ACCOUNT:-}" || -z "${ST_KEY:-}" || -z "${ST_FILESYSTEM:-}" || -z "${DIR:-}" || -z "${FILE:-}" ]]; then
    die "Missing parameters."
fi

# Export credentials for AZ CLI
export AZURE_STORAGE_ACCOUNT="$ST_ACCOUNT"
export AZURE_STORAGE_KEY="$ST_KEY"

# Check if Fileshare exists
echo "===> Checking if Fileshare '$ST_FILESYSTEM' exists."
if az storage share exists --name "$ST_FILESYSTEM" -o tsv | grep -q "True"; then
    echo "===> Fileshare '$ST_FILESYSTEM' exists."
else
    die "Fileshare '$ST_FILESYSTEM' does not exists."
fi

# Check if Directory exists
echo "===> Checking if Directory '$DIR' exists on Fileshare '$ST_FILESYSTEM'"
if az storage directory exists --share-name "$ST_FILESYSTEM" --name "$DIR" -o tsv | grep -q "True"; then
    echo "===> Directory '$DIR' exists."
else
    die "Directory '$DIR' does not exists."
fi  

# Check if File exists
echo "===> Checking if File '$FILE' exists."
if az storage file exists --share-name "$ST_FILESYSTEM" --path "$DIR/$FILE" -o tsv | grep -q "True"; then
    echo "===> File '$FILE' already exists."
else
    echo "===> File does not exists so uploading File '$FILE'."
    az storage file upload --share-name "$ST_FILESYSTEM" --source "$FILE" --path "$DIR/$FILE" || die "Failed to upload File '$FILE'."
    echo "===> File '$FILE' uploaded."
fi